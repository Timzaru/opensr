{"ts":1380565174970,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"from django.db import models\nfrom django.contrib.flatpages.models import FlatPage\nfrom colorful.fields import RGBColorField\n#from ckeditor.fields import RichTextField\n\nclass ParticipantManager(models.Manager):\n    def create_participant(self, experimental_group, test):\n        return self.create(experimental_group=experimental_group, test=test)\n    \nclass TrialManager(models.Manager):\n    def create_result(self, test, experimental_group, block, practice, primary_left_category, secondary_left_category, \n        primary_right_category, secondary_right_category, stimulus, latency, correct, participant):\n        return self.create(\n            test=test,\n            experimental_group=experimental_group,\n            block=block,\n            practice=practice,\n            primary_left_category=primary_left_category, \n            secondary_left_category=secondary_left_category,\n            primary_right_category=primary_right_category,\n            secondary_right_category=secondary_right_category,\n            stimulus=stimulus, \n            latency=latency, \n            correct=correct, \n            participant=participant\n        )\n    \nclass Test(models.Model):\n    test_name = models.CharField(max_length=60, unique=True)\n    introduction_page = models.ForeignKey(FlatPage, primary_key=False, related_name='test page', null=True, blank=True)\n    informed_consent_page = models.ForeignKey(FlatPage, primary_key=False, related_name='agreement page')\n    password = models.CharField(max_length=32)\n    is_active = models.BooleanField(default=True)\n    left_key_bind = models.CharField(max_length=1)\n    right_key_bind = models.CharField(max_length=1)\n    survey_url = models.URLField(null=True, blank=True)    \n    confirmation_page = models.ForeignKey(FlatPage, primary_key=False, related_name='confirmation page')\n    \n    def __unicode__(self):\n        return self.test_name\n    \nclass ExperimentalGroup(models.Model):\n    group_name = models.CharField(max_length=60)\n    page = models.ForeignKey(FlatPage, primary_key=False, related_name='experimental group page', null=True, blank=True)\n    test = models.ForeignKey(Test)\n    \n    def __unicode__(self):\n        return self.group_name\n    \nclass Participant(models.Model):\n    experimental_group = models.ForeignKey(ExperimentalGroup, null=True)\n    test = models.ForeignKey(Test)\n    has_completed_test = models.BooleanField(default=False)\n    objects = ParticipantManager()\n    \n    def __unicode__(self):\n        return \"Participant\"\n    \nclass Category(models.Model):\n    id = models.AutoField(primary_key=True)\n    category_name = models.CharField(max_length=20, unique=True) \n    color = RGBColorField()\n    \n    class Meta:\n        verbose_name_plural = \"categories\"\n    \n    def __unicode__(self):\n        return self.category_name\n    \nclass Block(models.Model):\n    block_name = models.CharField(max_length=60, unique=True)\n    instructions = models.TextField()#RichTextField()\n    order = models.IntegerField()   \n    practice = models.BooleanField(default=False)\n    number_of_stimuli = models.IntegerField()\n    test = models.ForeignKey(Test)\n    primary_right_category = models.ForeignKey(Category, related_name='primary right category')\n    secondary_right_category = models.ForeignKey(Category, related_name='secondary right category', null=True, blank=True)\n    primary_left_category = models.ForeignKey(Category, related_name='primary left category')\n    secondary_left_category = models.ForeignKey(Category, related_name='secondary left category', null=True, blank=True)\n    \n    def __unicode__(self):\n        return self.block_name\n\nclass Stimulus(models.Model):\n    id = models.AutoField(primary_key=True, editable=True)\n    category = models.ForeignKey(Category)\n    \n    class Meta:\n        abstract = True\n    \nclass ImageStimulus(Stimulus):\n    value = models.ImageField(upload_to=\"images/\")\n    \n    def __unicode__(self):\n        return self.value\n    \nclass TextStimulus(Stimulus):  \n    value = models.CharField(max_length=60) \n    \n    def __unicode__(self):\n        return self.value\n    \n# URthe#1Homo\n    \nclass Trial(models.Model):\n    date = models.DateField(auto_now=True)\n    time = models.TimeField(auto_now=True)\n    test = models.ForeignKey(Test)\n    participant = models.ForeignKey(Participant)\n    experimental_group = models.CharField(max_length=60)\n    block = models.CharField(max_length=60)\n    practice = models.BooleanField()\n    primary_left_category = models.CharField(max_length=60)\n    secondary_left_category = models.CharField(max_length=60)\n    primary_right_category = models.CharField(max_length=60)\n    secondary_right_category = models.CharField(max_length=60)\n    stimulus = models.CharField(max_length=120)\n    latency = models.DecimalField(max_digits=20, decimal_places=2)\n    correct = models.BooleanField()\n    objects = TrialManager()\n"]],"start1":0,"start2":0,"length1":0,"length2":4868}]],"length":4868}
{"contributors":[],"silentsave":false,"ts":1380565325054,"patch":[[{"diffs":[[0,"orField\n"],[-1,"#"],[0,"from cke"]],"start1":116,"start2":116,"length1":17,"length2":16},{"diffs":[[0,"s = "],[-1,"models.TextField()#"],[0,"Rich"]],"start1":2915,"start2":2915,"length1":27,"length2":8},{"diffs":[[0,"   \n"],[-1,"# URthe#1Homo\n    \n"],[0,"clas"]],"start1":4064,"start2":4064,"length1":27,"length2":8}]],"length":4829,"saved":false}
{"contributors":[],"silentsave":false,"ts":1381864956874,"patch":[[{"diffs":[[0,"= TrialManager()"],[-1,"\n"]],"start1":4812,"start2":4812,"length1":17,"length2":16}]],"length":4828,"saved":false}
{"contributors":[],"silentsave":false,"ts":1381941412956,"patch":[[{"diffs":[[0,"els.Model):\n"],[1,"    \n"],[0,"    test_nam"]],"start1":1163,"start2":1163,"length1":24,"length2":29},{"diffs":[[0,"f.test_name\n"],[1,"        \n    class Meta:\n        app_label = 'Testing Framework'\n"],[0,"    \nclass E"]],"start1":1882,"start2":1882,"length1":24,"length2":89},{"diffs":[[0,"ntegerField("],[1,"verbose_name='Number of trials'"],[0,")\n    test ="]],"start1":3124,"start2":3124,"length1":24,"length2":55}]],"length":4929,"saved":false}
{"ts":1381941430295,"patch":[[{"diffs":[[0,"ame\n"],[-1,"        \n    class Meta:\n        app_label = 'Testing Framework'\n"],[0,"    "]],"start1":1890,"start2":1890,"length1":73,"length2":8}]],"length":4864,"saved":false}
